module test

language chocopy
start symbol Program

test fnsimple [[
def f1() -> int:
	a: int = 0
	a = 1
	return a
]] analysis succeeds

test fnsimple2 [[
def f1(a:int) -> int:
	a = 1
	return a
]] analysis succeeds

test fnsimple3 [[
def f1(a:int, b:int) -> int:
	c :int = 0
	a = b
	c = 1
	return a
]] analysis succeeds

test fnsimple5 [[
def f1(a:int, b:int) -> int:
	c :int = 0
	a = b
	c = 1
	return a
f1(2,3)
]] analysis succeeds

test fnsimple4 [[
def f1(a:int, b:int) -> int:
	a: int = 0
	return a
]] analysis fails



test fnsimple6 [[
def f1(a:int, b:int) -> int:
	c :int = 0
	a = b
	c = 1
	return a
f2(2,3)
]] analysis fails

test fnsimple6 [[
f2(2,3)
]] analysis fails

test fnsimple7 [[
a: int = 0
def f1(a:int, b:int) -> int:
	c :int = 0
	a = b
	c = 1
	return a
a = f1(2,3)
]] analysis succeeds

test fnsimple8 [[
a: bool = True
def f1(a:int, b:int) -> int:
	c :int = 0
	a = b
	c = 1
	return a
a = f1(2,3)
]] analysis fails

test fnsimple9 [[
def f1(a:int, b:int):
	a = 1
]] analysis succeeds


test class one [[
class Vector(object):
	def capacity(self:int) -> int:
		return len(self.items)

vec:Vector = None
]] analysis succeeds

